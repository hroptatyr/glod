dnl -------------------------------------------------------------------------
dnl Autoconf startup.
dnl -------------------------------------------------------------------------

AC_PREREQ([2.64])
AC_INIT([glod], [0.1.4.GIT], [https://github.com/hroptatyr/glod])
AC_CONFIG_AUX_DIR([build-aux])
AC_CONFIG_HEADERS([src/config.h])
AC_CONFIG_MACRO_DIR([m4])

dnl -------------------------------------------------------------------------
dnl Local copyright notices.
dnl -------------------------------------------------------------------------

AC_COPYRIGHT([dnl
#### Configuration script for glod
#### Copyright (C) 2010-2014  Sebastian Freundt

### Don't edit this script!
### This script was automatically generated by the `autoconf' program
### from the file `./configure.ac'.
### To rebuild it, execute the command
###     autoreconf
])

AM_INIT_AUTOMAKE([foreign parallel-tests dist-xz color-tests subdir-objects])
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

AX_YUCK_SCMVER([version.mk])
AC_CONFIG_LINKS([GNUmakefile:GNUmakefile])

## the build chain
AC_PROG_CC([icc tcc gcc cc])
SXE_CHECK_CC([c11 c1x c99 gnu99])
SXE_CHECK_CFLAGS
AC_CHECK_TOOLS([AR], [xiar ar], [false])
AC_C_BIGENDIAN

## check for yuck helper
AX_CHECK_YUCK

## check for pseudo-tty support
AC_CHECK_HEADERS([pty.h])
AM_CONDITIONAL([HAVE_PTY_H], [test "${ac_cv_header_pty_h}" = "yes"])

## check for intrinsics
AC_CHECK_HEADERS([immintrin.h])
AC_CHECK_TYPES([__m256i], [], [], [[#include <immintrin.h>]])
AC_MSG_CHECKING([for _tzcnt_u32])
AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <immintrin.h>]], [_tzcnt_u32(0U);])], [
	ac_cv_func__tzcnt_u32="yes"
], [
	ac_cv_func__tzcnt_u32="no"
	AC_MSG_RESULT([${ac_cv_func__tzcnt_u32}])
	AC_MSG_CHECKING([for non-compliant __tzcnt_u32])
	AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <immintrin.h>]], [__tzcnt_u32(0U);])], [
		ac_cv_func__tzcnt_u32="yes"
		AC_DEFINE([_tzcnt_u32], [__tzcnt_u32], [just an alias])
		ac_cv_func___tzcnt_u32="yes"], [
		ac_cv_func___tzcnt_u32="no"])
	])
AC_MSG_RESULT([${ac_cv_func__tzcnt_u32}])
AM_CONDITIONAL([HAVE_INTRIN], [test "${ac_cv_type___m256i}" = "yes" -a "${ac_cv_func__tzcnt_u32}" = "yes"])


PKG_CHECK_MODULES([tokyocabinet], [tokyocabinet], [
	have_tcbdb="yes"
	AC_DEFINE([USE_TCBDB], [1], [define when tokyocabinet shall be db backend])
	with_database="tcbdb"
], [
	have_tcbdb="no"
])
AC_ARG_ENABLE([tokyocabinet], [dnl
AS_HELP_STRING([--disable-tokyocabinet], [
Disable binaries that make use of the tokyocabinet key/value store.])],
	[enable_tokyocabinet="${enableval}"], [enable_tokyocabinet="yes"])
AM_CONDITIONAL([HAVE_TCBDB], [test "${have_tcbdb}" = "yes" -a "${enable_tokyocabinet}" = "yes"])


## libtool goddess^Wgoodness
## has to be down here as we're turning -Werror'ing off
LT_INIT
SXE_CHECK_LIBTOOL

AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([build-aux/Makefile])
AC_CONFIG_FILES([info/Makefile])
AC_CONFIG_FILES([src/Makefile])
AC_CONFIG_FILES([test/Makefile])
AC_OUTPUT

echo
echo
echo "Build summary"
echo "============="
echo
echo "Everything will be built"
echo

## configure ends here
dnl configure.ac ends here
